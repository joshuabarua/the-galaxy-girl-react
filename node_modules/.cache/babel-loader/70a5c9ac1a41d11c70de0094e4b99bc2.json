{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n      _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, unstable_createGetCssVar as systemCreateGetCssVar, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport getOverlayAlpha from './getOverlayAlpha';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\n\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\n\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {// ignore error\n  }\n\n  return undefined;\n};\n\nexport const createGetCssVar = (cssVarPrefix = 'mui') => systemCreateGetCssVar(cssVarPrefix);\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui'\n  } = options,\n        input = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const getCssVar = createGetCssVar(cssVarPrefix);\n\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n\n  let theme = _extends({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } // MUI X - DataGrid needs this token.\n\n\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(colors.main));\n        }\n\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(colors.light));\n        }\n\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(colors.dark));\n        }\n\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(colors.contrastText));\n        }\n\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  theme.unstable_sxConfig = _extends({}, defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n\n  return theme;\n}","map":{"version":3,"sources":["/Users/josh/Projects/TheGalaxyGirl/node_modules/@mui/material/styles/experimental_extendTheme.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","deepmerge","private_safeColorChannel","safeColorChannel","private_safeAlpha","safeAlpha","private_safeDarken","safeDarken","private_safeLighten","safeLighten","private_safeEmphasize","safeEmphasize","unstable_createGetCssVar","systemCreateGetCssVar","unstable_defaultSxConfig","defaultSxConfig","unstable_styleFunctionSx","styleFunctionSx","createThemeWithoutVars","getOverlayAlpha","defaultDarkOverlays","Array","map","_","index","undefined","overlay","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","setColorChannel","silent","fn","error","createGetCssVar","cssVarPrefix","extendTheme","options","args","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","getCssVar","_createThemeWithoutVa","light","palette","lightPalette","muiTheme","darkPalette","mode","dark","theme","opacity","inputPlaceholder","inputUnderline","switchTrackDisabled","switchTrack","overlays","Object","common","Alert","info","success","warning","getContrastText","main","AppBar","Avatar","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","background","default","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","divider","Tooltip","grey","color","colors","contrastText","active","selected","reduce","acc","argument","unstable_sxConfig","unstable_sx","sx","props"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n  _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, unstable_createGetCssVar as systemCreateGetCssVar, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport getOverlayAlpha from './getOverlayAlpha';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nexport const createGetCssVar = (cssVarPrefix = 'mui') => systemCreateGetCssVar(cssVarPrefix);\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n  const {\n      colorSchemes: colorSchemesInput = {},\n      cssVarPrefix = 'mui'\n    } = options,\n    input = _objectWithoutPropertiesLoose(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })),\n    {\n      palette: lightPalette\n    } = _createThemeWithoutVa,\n    muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = _extends({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    // attach black & white channels to common node\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(colors.main));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(colors.light));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(colors.dark));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(colors.contrastText));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  theme.unstable_sxConfig = _extends({}, defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}